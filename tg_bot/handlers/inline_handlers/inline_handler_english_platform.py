from aiogram import F
from aiogram import Router
from aiogram.types import CallbackQuery, FSInputFile

from logger_config import get_logger
from tg_bot.keyboards.inline_keyboards.inline_back_to_main import back_to_main_inline

logger = get_logger()

english_platform_router: Router = Router()


@english_platform_router.callback_query(F.data == 'english_platform')
async def process_button_english_press(callback: CallbackQuery):
    logger.debug("–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ 'english_platform'")
    logger.debug(f"–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {callback.from_user.id}")

    response_text = (
        'Lim English ‚Äì —ç—Ç–æ –Ω–∞–±–æ—Ä –∫—É—Ä—Å–æ–≤ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è –∞–Ω–≥–ª–∏–π—Å–∫–æ–º—É —è–∑—ã–∫—É. '
        '–í—Å–µ –∫—É—Ä—Å—ã –¥–µ–ª—è—Ç—Å—è –ø–æ —É—Ä–æ–≤–Ω—é —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –∏ —Ç–µ–º–∞—Ç–∏–∫–µ. '
        '–ö–∞–∂–¥—ã–π —É—Ä–æ–∫ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –≤ —Å–µ–±–µ –≤–∏–¥–µ–æ, –∞—É–¥–∏—Ä–æ–≤–∞–Ω–∏–µ, —Å–ª–æ–≤–∞—Ä—å, –¥–∏–∫—Ç–∞–Ω—Ç –∏ –ø–µ—Ä–µ–≤–æ–¥.\n'
        '–î–ª—è –Ω–∞—à–∏—Ö —Ä–µ–∑–∏–¥–µ–Ω—Ç–æ–≤ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –≤–∏–¥–µ –ø—Ä–∏—è—Ç–Ω–æ–≥–æ –±–æ–Ω—É—Å–∞!\n'
        '–ù–∏–∂–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ —Ä–∞–±–æ—Ç–µ –∏ –¥–æ—Å—Ç—É–ø–æ–º.\n'
        'P.S. –û–ß–ï–ù–¨ –ü–†–û–°–ò–ú –í–ê–° –ù–ï –ò–ó–ú–ï–ù–Ø–¢–¨ –ü–ê–†–û–õ–¨ –ò –ò–°–ü–û–õ–¨–ó–û–í–ê–¢–¨ –¢–û–õ–¨–ö–û –¢–û–¢, –ö–û–¢–û–†–´–ô –ü–†–ï–î–û–°–¢–ê–í–õ–ï–ù –í –ò–ù–°–¢–†–£–ö–¶–ò–ò!!! ü§ó\n'
    )

    try:
        await callback.message.answer(text=response_text)
        logger.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {callback.from_user.id}: {response_text}")

        document = FSInputFile(path='files/Lim_English.pdf', filename='LimEnglish.pdf')
        await callback.message.answer_document(document=document, caption='–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ä–∞–±–æ—Ç–µ —Å –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ–π',
                                               reply_markup=back_to_main_inline)
        logger.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω –¥–æ–∫—É–º–µ–Ω—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {callback.from_user.id}: LimEnglish.pdf")

        await callback.message.delete()
        logger.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {callback.from_user.id}")

        await callback.answer()
        logger.debug(f"–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {callback.from_user.id}")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ 'english_platform': {e}")
